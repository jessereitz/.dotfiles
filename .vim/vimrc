" vimrc
set nocompatible                " No vi legacy
syntax enable                   " Enable syntax processing
colorscheme peachpuff           " Set colorscheme

set clipboard=unnamed

set encoding=utf-8              " Set encoding to UTF-8

set mouse=a

"" Whitespace
set nowrap                      " Don't wrap lines
set formatoptions-=t            " do not automatically wrap text when typing
set tabstop=4                   " Set number of visual spaces per TAB
set shiftwidth=4                " Set number of spaces in TAB when editing (real number of spaces)
set expandtab                   " Insert spaces, not tabs
"" UI Config
set number                      " Show line numbers
set showcmd                     " Display incomplete commands
set cursorline                  " Highlight the current line
filetype indent on              " Load filetype-specific indent files
set wildmenu                    " Visual autocomplete for command menu
set lazyredraw                  " Don't redraw screen when it's not necessary
set showmatch                   " Highlight matching [{()}]
set splitright

set backspace=indent,eol,start  " Backspace through everything in insert mode
inoremap <C-d> <Del>            " Delete key forward delete

"" Searching
set incsearch                   " Search as characeters are entered
set hlsearch                    " Highlight matches
" Map escape key to search for empty string. Effectively turns off search highlighting
nnoremap <F3> :let @/ = ''<CR>
set ignorecase                  " Searches are case insensitive unless...
set smartcase                   " ... they contain at least one capital letter

"" Folding
set foldenable                  " Enable folding
set foldlevelstart=10           " Open most folds by default
set foldnestmax=10              " 10 nested fold max
" Space open/closes folds
nnoremap <space> za
set foldmethod=indent           " Fold based on indent level

"" Custom Movement Stuff
nnoremap gV `[v`]

"" PLUGINS
" Before initializing vim-plug, set up ackprg to use ag instead of ack
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

"" Install vim-plug if not installed.
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Start vim-plug
call plug#begin('~/.vim/plugged')

" Install ack.vim
Plug 'mileszs/ack.vim'

" Install NerdTree
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
let NERDTreeShowHidden=1
map <C-n> :NERDTreeToggle<CR>
autocmd BufWritePost * NERDTreeFocus | execute 'normal R' | wincmd p " Autorefresh nerdtree



" Install Polyglot language pack
Plug 'sheerun/vim-polyglot'

" Install csv.vim
Plug 'chrisbra/csv.vim'

Plug 'ycm-core/YouCompleteMe'
" Better go-to map
noremap <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

Plug 'vim-syntastic/syntastic'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0


Plug 'nvie/vim-flake8'

Plug 'ctrlpvim/ctrlp.vim'

Plug 'tpope/vim-fugitive'

Plug 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" End vim-plug
call plug#end()


"" Python Configuration

" python with virtualenv support

python3 << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  exec(open(activate_this).read(), dict(__file__=activate_this))
EOF

let python_highlight_all=1

